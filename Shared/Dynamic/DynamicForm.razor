@using System.Net
@using System.Text.Json
@using System.ComponentModel
@using blazorapp.DynamicForm
@using blazorapp.DynamicForm.Serialization
@inject HttpClient Http

<h3>@Title</h3>

<EditForm Model="@Model" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    @if (_formDefinition != null && _formDefinition.Components != null)
    {
        @foreach (var component in _formDefinition.Components)
        {
            <label>@component.Name</label><br />
            <Question Component="@component" /><br/>
        }
    }
    
    @* <InputText id="name" @bind-Value="exampleModel.Name" /> *@

    <button type="submit">Submit</button>
</EditForm>

@code {
    private FormDefinition _formDefinition;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine($"Debugging: {FormDefinition}");
        var serializeOptions = new JsonSerializerOptions();
        // serializeOptions.Converters.Add(new FormSerializer());
        serializeOptions.Converters.Add(new Componentserializer());
        serializeOptions.WriteIndented = true;
        _formDefinition = await Http.GetFromJsonAsync<FormDefinition>(FormDefinition, serializeOptions);

        if (_formDefinition == null)
        {
            Console.WriteLine("Form is null");
        }
        else
        {
            if (_formDefinition.Components == null || _formDefinition.Components.Length == 0)
            {
                Console.WriteLine("Form is empty");
            }
            else
            {
                Console.WriteLine($"Form contains {_formDefinition.Components.Length} elements");
            }
        }
    }
    
    private void HandleValidSubmit()
    {
        Console.WriteLine("Submit");
        Console.WriteLine(Model.ToString());
    }
    
    [Parameter]
    public string FormDefinition { get; set; }
    
    [Parameter]
    public string Title { get; set; }
    
    [Parameter]
    public object Model { get; set; }
}